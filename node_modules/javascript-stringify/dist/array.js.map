{"version":3,"file":"array.js","sourceRoot":"","sources":["../src/array.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH,SAAgB,aAAa,CAAC,KAAY,EAAE,KAAa,EAAE,IAAU;IACnE,yEAAyE;IACzE,MAAM,MAAM,GAAG,KAAK;SACjB,GAAG,CAAC,UAAS,KAAK,EAAE,KAAK;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAElC,IAAI,MAAM,KAAK,SAAS;YAAE,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;QAEhD,OAAO,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;IACvD,CAAC,CAAC;SACD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAE7B,yDAAyD;IACzD,IAAI,KAAK,IAAI,MAAM,EAAE;QACnB,OAAO,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;KAC/B;IAED,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;AAC5B,CAAC;AAlBD,sCAkBC","sourcesContent":["import { Next } from \"./types\";\n\n/**\n * Stringify an array of values.\n */\nexport function arrayToString(array: any[], space: string, next: Next) {\n  // Map array values to their stringified values with correct indentation.\n  const values = array\n    .map(function(value, index) {\n      const result = next(value, index);\n\n      if (result === undefined) return String(result);\n\n      return space + result.split(\"\\n\").join(`\\n${space}`);\n    })\n    .join(space ? \",\\n\" : \",\");\n\n  // Wrap the array in newlines if we have indentation set.\n  if (space && values) {\n    return \"[\\n\" + values + \"\\n]\";\n  }\n\n  return \"[\" + values + \"]\";\n}\n"]}