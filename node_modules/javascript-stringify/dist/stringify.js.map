{"version":3,"file":"stringify.js","sourceRoot":"","sources":["../src/stringify.ts"],"names":[],"mappings":"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","sourcesContent":["import { quoteString } from \"./quote\";\nimport { Next } from \"./types\";\nimport { arrayToString } from \"./array\";\nimport { objectToString } from \"./object\";\nimport { functionToString } from \"./function\";\n\n/**\n * Stringify primitive values.\n */\nconst PRIMITIVE_TYPES = {\n  string: quoteString,\n  number: (value: number) => (Object.is(value, -0) ? \"-0\" : String(value)),\n  boolean: String,\n  symbol: (value: symbol, space: string, next: Next) => {\n    const key = Symbol.keyFor(value);\n\n    if (key !== undefined) return `Symbol.for(${next(key)})`;\n\n    // ES2018 `Symbol.description`.\n    return `Symbol(${next((value as any).description)})`;\n  },\n  undefined: String\n};\n\n/**\n * Stringify global variable access.\n */\nfunction globalToString(value: any, space: string, next: Next) {\n  return `Function(${next(\"return this\")})()`;\n}\n\n/**\n * Convert JavaScript objects into strings.\n */\nconst OBJECT_TYPES = {\n  \"[object Array]\": arrayToString,\n  \"[object Object]\": objectToString,\n  \"[object Error]\": function(error: Error, space: string, next: Next) {\n    return `new Error(${next(error.message)})`;\n  },\n  \"[object Date]\": function(date: Date) {\n    return `new Date(${date.getTime()})`;\n  },\n  \"[object String]\": function(str: String, space: string, next: Next) {\n    return `new String(${next(str.toString())})`;\n  },\n  \"[object Number]\": function(num: number) {\n    return `new Number(${num})`;\n  },\n  \"[object Boolean]\": function(bool: boolean) {\n    return `new Boolean(${bool})`;\n  },\n  \"[object Set]\": function(set: Set<any>, space: string, next: Next) {\n    return `new Set(${next(Array.from(set))})`;\n  },\n  \"[object Map]\": function(map: Map<any, any>, space: string, next: Next) {\n    return `new Map(${next(Array.from(map))})`;\n  },\n  \"[object RegExp]\": String,\n  \"[object Function]\": functionToString,\n  \"[object GeneratorFunction]\": functionToString,\n  \"[object AsyncFunction]\": functionToString,\n  \"[object AsyncGeneratorFunction]\": functionToString,\n  \"[object global]\": globalToString,\n  \"[object Window]\": globalToString\n};\n\n/**\n * Stringify a value recursively.\n */\nexport function toString(value: any, space: string, next: Next) {\n  if (value === null) return \"null\";\n\n  const typeOf = typeof value;\n\n  if (PRIMITIVE_TYPES.hasOwnProperty(typeOf)) {\n    return PRIMITIVE_TYPES[typeOf as keyof typeof PRIMITIVE_TYPES](\n      value,\n      space,\n      next\n    );\n  }\n\n  // Handle buffer objects before object types (node < 6 was an object, node >= 6 is a `Uint8Array`).\n  if (typeof (Buffer as unknown) === \"function\" && Buffer.isBuffer(value)) {\n    return `new Buffer(${next(value.toString())})`;\n  }\n\n  // Use the internal object string to select stringify method.\n  const toString = Object.prototype.toString.call(value);\n\n  // Convert objects into strings.\n  if (OBJECT_TYPES.hasOwnProperty(toString)) {\n    return OBJECT_TYPES[toString as keyof typeof OBJECT_TYPES](\n      value,\n      space,\n      next\n    );\n  }\n}\n"]}